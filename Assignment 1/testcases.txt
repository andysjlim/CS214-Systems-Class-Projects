{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf760
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 own testcase 1:\
\
We thought of an idea where things are malloc-ed in an incrementing size in a limited space, for example, 5000 space. It has to reach a capacity at some point where the numbers added are too big to continue. Following the summation rule, there will be a point where the sum of all numbers continuing will add up to 5k (the memSpace). Then we free the entire thing backward from the last place where things were malloc-ed \
\
own testcase 2:\
\
We thought of doing testcase 1 but entirely backward. We even did the free part backward which is actually forward.}